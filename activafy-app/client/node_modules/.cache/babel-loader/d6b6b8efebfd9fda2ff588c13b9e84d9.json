{"ast":null,"code":"var _jsxFileName = \"/Users/gillianpantaleon/Desktop/web-projects/project-5/activafy-app/client/src/components/auth/Login.js\";\nimport { Menu } from '../layout/Menu';\nimport { Container, Form, Col, Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport '../style/Auth.css';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authAction\";\nimport classnames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nav = [{\n  id: 1,\n  link: \"/signup\",\n  label: \"Sign up\"\n}];\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/home\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        nav: nav,\n        link: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"section\",\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          id: \"login\",\n          className: \"wrapper\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            className: \"text-center\",\n            xs: 6,\n            md: 4,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: \"Commit to be fit.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Welcome back!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: this.onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"fromBasicUsername\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Enter email\",\n                  onChange: this.onChange,\n                  value: this.state.email,\n                  error: errors.email,\n                  id: \"email\",\n                  type: \"email\",\n                  className: classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"red-text\",\n                  children: [errors.email, errors.emailnotfound]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicPassword\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  placeholder: \"Enter password\",\n                  onChange: this.onChange,\n                  value: this.state.password,\n                  error: errors.password,\n                  id: \"password\",\n                  type: \"password\",\n                  className: classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"red-text\",\n                  children: [errors.password, errors.passwordincorrect]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-custom\",\n                type: \"submit\",\n                children: \"Log In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/signup\",\n                  children: \"Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\n;\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/Users/gillianpantaleon/Desktop/web-projects/project-5/activafy-app/client/src/components/auth/Login.js"],"names":["Menu","Container","Form","Col","Button","React","Component","PropTypes","connect","loginUser","classnames","nav","id","link","label","Login","constructor","onChange","e","setState","target","value","onSubmit","preventDefault","userData","email","state","password","props","errors","componentWillReceiveProps","nextProps","auth","isAuthenticated","history","push","render","invalid","emailnotfound","passwordincorrect","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,SAASA,IAAT,QAAqB,gBAArB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,MAA/B,QAA6C,iBAA7C;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,mBAAP;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,MAAMC,GAAG,GAAG,CACV;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEC,EAAAA,KAAK,EAAE;AAHT,CADU,CAAZ;;AAQA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAC1BU,EAAAA,WAAW,GAAG;AACZ;;AADY,SAmBdC,QAnBc,GAmBHC,CAAC,IAAI;AACd,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASR,EAAV,GAAeM,CAAC,CAACE,MAAF,CAASC;AAA1B,OAAd;AACD,KArBa;;AAAA,SAsBdC,QAtBc,GAsBHJ,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACK,cAAF;AAEA,YAAMC,QAAQ,GAAG;AACfC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADH;AAEfE,QAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC;AAFN,OAAjB;AAIA,WAAKC,KAAL,CAAWnB,SAAX,CAAqBe,QAArB;AACD,KA9Ba;;AAEZ,SAAKE,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,EADI;AAEXE,MAAAA,QAAQ,EAAE,EAFC;AAGXE,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKD;;AACDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACC,IAAV,CAAeC,eAAnB,EAAoC;AAClC,WAAKL,KAAL,CAAWM,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACD;;AACL,QAAIJ,SAAS,CAACF,MAAd,EAAsB;AAChB,WAAKV,QAAL,CAAc;AACZU,QAAAA,MAAM,EAAEE,SAAS,CAACF;AADN,OAAd;AAGD;AACF;;AAeDO,EAAAA,MAAM,GAAE;AACN,UAAM;AAACP,MAAAA;AAAD,QAAW,KAAKH,KAAtB;AACF,wBACE;AAAA,8BACA,QAAC,IAAD;AAAM,QAAA,GAAG,EAAEf,GAAX;AAAgB,QAAA,IAAI,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,cADA,eAGA,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,SAArB;AAA+B,QAAA,KAAK,MAApC;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAC,OAAR;AAAgB,UAAA,SAAS,EAAC,SAA1B;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,aAAf;AAA6B,YAAA,EAAE,EAAE,CAAjC;AAAoC,YAAA,EAAE,EAAE,CAAxC;AAAA,oCACE;AAAA,qCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,qCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,IAAD;AAAM,cAAA,QAAQ,EAAE,KAAKW,QAArB;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,SAAS,EAAC,mBAAtB;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AAAA;AAAA;AAAA;AAAA,wBAFF,eAGE;AACE,kBAAA,WAAW,EAAC,aADd;AAEE,kBAAA,QAAQ,EAAE,KAAKL,QAFjB;AAGE,kBAAA,KAAK,EAAE,KAAKS,KAAL,CAAWD,KAHpB;AAIE,kBAAA,KAAK,EAAEI,MAAM,CAACJ,KAJhB;AAKE,kBAAA,EAAE,EAAC,OALL;AAME,kBAAA,IAAI,EAAC,OANP;AAOE,kBAAA,SAAS,EAAEf,UAAU,CAAC,EAAD,EAAK;AACxB2B,oBAAAA,OAAO,EAAER,MAAM,CAACJ,KAAP,IAAgBI,MAAM,CAACS;AADR,mBAAL;AAPvB;AAAA;AAAA;AAAA;AAAA,wBAHF,eAcE;AAAM,kBAAA,SAAS,EAAC,UAAhB;AAAA,6BACOT,MAAM,CAACJ,KADd,EAEOI,MAAM,CAACS,aAFd;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAoBE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,SAAS,EAAC,mBAAtB;AAAA,wCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE;AACE,kBAAA,WAAW,EAAC,gBADd;AAEE,kBAAA,QAAQ,EAAE,KAAKrB,QAFjB;AAGE,kBAAA,KAAK,EAAE,KAAKS,KAAL,CAAWC,QAHpB;AAIE,kBAAA,KAAK,EAAEE,MAAM,CAACF,QAJhB;AAKE,kBAAA,EAAE,EAAC,UALL;AAME,kBAAA,IAAI,EAAC,UANP;AAOE,kBAAA,SAAS,EAAEjB,UAAU,CAAC,EAAD,EAAK;AACxB2B,oBAAAA,OAAO,EAAER,MAAM,CAACF,QAAP,IAAmBE,MAAM,CAACU;AADX,mBAAL;AAPvB;AAAA;AAAA;AAAA;AAAA,wBAFF,eAaE;AAAM,kBAAA,SAAS,EAAC,UAAhB;AAAA,6BACOV,MAAM,CAACF,QADd,EAEOE,MAAM,CAACU,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA,wBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,sBApBF,eAsCE;AAAA;AAAA;AAAA;AAAA,sBAtCF,eAuCE,QAAC,MAAD;AAAQ,gBAAA,SAAS,EAAC,YAAlB;AAA+B,gBAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAvCF,eAwCE;AAAA,mEAA0B;AAAG,kBAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,sBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA,oBADF;AAwDC;;AA3FyB;;AA4F7B;AAEDxB,KAAK,CAACyB,SAAN,GAAkB;AAChB/B,EAAAA,SAAS,EAAEF,SAAS,CAACkC,IAAV,CAAeC,UADV;AAEhBV,EAAAA,IAAI,EAAEzB,SAAS,CAACoC,MAAV,CAAiBD,UAFP;AAGhBb,EAAAA,MAAM,EAAEtB,SAAS,CAACoC,MAAV,CAAiBD;AAHT,CAAlB;;AAKA,MAAME,eAAe,GAAGlB,KAAK,KAAK;AAChCM,EAAAA,IAAI,EAAEN,KAAK,CAACM,IADoB;AAEhCH,EAAAA,MAAM,EAAEH,KAAK,CAACG;AAFkB,CAAL,CAA7B;;AAIA,eAAerB,OAAO,CACpBoC,eADoB,EAEpB;AAAEnC,EAAAA;AAAF,CAFoB,CAAP,CAGbM,KAHa,CAAf","sourcesContent":["import { Menu } from '../layout/Menu'\nimport { Container, Form, Col, Button } from 'react-bootstrap'\nimport React, { Component } from 'react';\n\nimport '../style/Auth.css';\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authAction\";\nimport classnames from \"classnames\";\n\nconst nav = [\n  {\n    id: 1,\n    link: \"/signup\",\n    label: \"Sign up\"\n  }\n]\n\nclass Login extends Component {\n    constructor() {\n      super();\n      this.state = {\n        email: \"\",\n        password: \"\",\n        errors: {}\n      };\n    }\n    componentWillReceiveProps(nextProps) {\n      if (nextProps.auth.isAuthenticated) {\n        this.props.history.push(\"/home\");\n      }\n  if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n\n    onChange = e => {\n      this.setState({ [e.target.id]: e.target.value });\n    }\n    onSubmit = e => {\n      e.preventDefault();\n\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData);\n    };\n\n    render(){\n      const {errors} = this.state;\n    return(\n      <>\n      <Menu nav={nav} link=\"/\" />\n\n      <Container className=\"section\" fluid>\n        <Col id=\"login\" className=\"wrapper\">\n          <Col className=\"text-center\" xs={6} md={4}>\n            <h3><em>Commit to be fit.</em></h3>\n            <h5><strong>Welcome back!</strong></h5>\n            <Form onSubmit={this.onSubmit}> \n              <Form.Group controlId=\"fromBasicUsername\">\n                <Form.Label>Email</Form.Label>\n                <br/>\n                <input\n                  placeholder=\"Enter email\"\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <span className=\"red-text\">\n                      {errors.email}\n                      {errors.emailnotfound}\n                </span>\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <input\n                  placeholder=\"Enter password\"\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <span className=\"red-text\">\n                      {errors.password}\n                      {errors.passwordincorrect}\n                </span>\n              </Form.Group>\n              <p></p>\n              <Button className=\"btn-custom\" type=\"submit\">Log In</Button>\n              <p>Don't have an account? <a href='/signup'>Sign Up</a></p>\n            </Form>\n          </Col>\n        </Col>\n      </Container>\n      </> \n    )\n    }\n};\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);"]},"metadata":{},"sourceType":"module"}