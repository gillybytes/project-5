{"ast":null,"code":"var _jsxFileName = \"/Users/gillianpantaleon/Desktop/web-projects/project-5/activafy-app/client/src/components/pages/auth/Login.js\";\nimport { Menu } from '../../layout/Menu';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../../actions/authAction\";\nimport classnames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nav = [{\n  id: 1,\n  link: \"/signup\",\n  label: \"Sign up\"\n}];\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData);\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/home\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        nav: nav,\n        link: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        className: \"section\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"fromBasicUsername\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Enter email\",\n                onChange: this.onChange,\n                value: this.state.email,\n                error: errors.email,\n                id: \"email\",\n                type: \"email\",\n                className: classnames(\"\", {\n                  invalid: errors.email || errors.emailnotfound\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red-text\",\n                children: [errors.email, errors.emailnotfound]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Enter password\",\n                onChange: this.onChange,\n                value: this.state.password,\n                error: errors.password,\n                id: \"password\",\n                type: \"password\",\n                className: classnames(\"\", {\n                  invalid: errors.password || errors.passwordincorrect\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"red-text\",\n                children: [errors.password, errors.passwordincorrect]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\n;\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/Users/gillianpantaleon/Desktop/web-projects/project-5/activafy-app/client/src/components/pages/auth/Login.js"],"names":["Menu","Container","Form","Button","React","Component","PropTypes","connect","loginUser","classnames","nav","id","link","label","Login","constructor","onChange","e","setState","target","value","onSubmit","preventDefault","userData","email","state","password","props","errors","componentWillReceiveProps","nextProps","auth","isAuthenticated","history","push","render","invalid","emailnotfound","passwordincorrect","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import { Menu } from '../../layout/Menu'\nimport { Container, Form, Button } from 'react-bootstrap'\nimport React, { Component } from 'react';\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../../actions/authAction\";\nimport classnames from \"classnames\";\n\nconst nav = [\n  {\n    id: 1,\n    link: \"/signup\",\n    label: \"Sign up\"\n  }\n]\n\nclass Login extends Component {\n    constructor() {\n      super();\n      this.state = {\n        email: \"\",\n        password: \"\",\n        errors: {}\n      };\n    }\n    componentWillReceiveProps(nextProps) {\n      if (nextProps.auth.isAuthenticated) {\n        this.props.history.push(\"/home\");\n      }\n  if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n\n    onChange = e => {\n      this.setState({ [e.target.id]: e.target.value });\n    }\n    onSubmit = e => {\n      e.preventDefault();\n\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData);\n    };\n\n    render(){\n      const {errors} = this.state;\n    return(\n      <>\n      <Menu nav={nav} link=\"/\" />\n\n      <Container className=\"section\">\n        <Form onSubmit={this.onSubmit}> \n          <Form.Group controlId=\"fromBasicUsername\">\n            <Form.Label>Email</Form.Label>\n            <br/>\n            <div>\n            <input\n              placeholder=\"Enter email\"\n              onChange={this.onChange}\n              value={this.state.email}\n              error={errors.email}\n              id=\"email\"\n              type=\"email\"\n              className={classnames(\"\", {\n                invalid: errors.email || errors.emailnotfound\n              })}\n            />\n            <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n            </span>\n            </div>\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <br/>\n            <div>\n            <input\n              placeholder=\"Enter password\"\n              onChange={this.onChange}\n              value={this.state.password}\n              error={errors.password}\n              id=\"password\"\n              type=\"password\"\n              className={classnames(\"\", {\n                invalid: errors.password || errors.passwordincorrect\n              })}\n            />\n            <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n            </span>\n            </div>\n          </Form.Group>\n          <Button \n            type=\"submit\"\n            className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n          >\n            Login\n          </Button>\n        </Form>\n      </Container>\n      </> \n    )\n    }\n};\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);"]},"metadata":{},"sourceType":"module"}