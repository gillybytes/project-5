{"ast":null,"code":"var _jsxFileName = \"/Users/gillianpantaleon/Desktop/web-projects/project-5/activafy-app/client/src/context/auth/authSate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { SIGNUP_SUCCESS, SIGNUP_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Load User\n\n  const loadUser = async () => {\n    setAuthToken(localStorage.token);\n\n    try {\n      const res = await axios.get('/');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // Register User\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/', formData, config);\n      dispatch({\n        type: SIGNUP_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: SIGNUP_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Login User\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/', formData, config);\n      const bearerToken = res.data.jwt;\n      setAuthToken(bearerToken);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; // Logout\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  }; // Clear Errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      login,\n      logout,\n      clearErrors\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/Users/gillianpantaleon/Desktop/web-projects/project-5/activafy-app/client/src/context/auth/authSate.js"],"names":["React","useReducer","axios","AuthContext","authReducer","setAuthToken","SIGNUP_SUCCESS","SIGNUP_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","login","bearerToken","jwt","logout","clearErrors","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport {\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_ERRORS\n} from '../types';\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        isAuthenticated: null,\n        loading: true,\n        user: null,\n        error: null\n    };\n\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    // Load User\n    const loadUser = async () => {\n        setAuthToken(localStorage.token)\n    \n        try {\n            const res = await axios.get('/');\n\n            dispatch({\n                type: USER_LOADED,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({ type: AUTH_ERROR});\n        }\n    };\n\n    // Register User\n    const register = async formData => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        try {\n            const res = await axios.post('/', formData, config);\n            dispatch({\n                type: SIGNUP_SUCCESS,\n                payload: res.data\n            });\n\n        } catch (err) {\n            dispatch({\n                type: SIGNUP_FAIL,\n                payload: err.response.data.msg\n            });\n        }\n    };\n\n    // Login User\n    const login = async formData => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        try {\n            const res = await axios.post('/', formData, config);\n            const bearerToken = res.data.jwt;\n            setAuthToken(bearerToken);\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            });\n\n        } catch(err) {\n            dispatch({\n                type: LOGIN_FAIL,\n                payload: err.response.data.msg\n            });\n        }\n    };\n\n    // Logout\n    const logout = () => {\n        dispatch({ type: LOGOUT })\n    };\n\n    // Clear Errors\n    const clearErrors = () => dispatch( {type: CLEAR_ERRORS });\n\n    return(\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                isAuthenticated: state.isAuthenticated,\n                loading: state.loading,\n                user: state.user,\n                error: state.error,\n                register,\n                login,\n                logout,\n                clearErrors\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}